-- MySQL Script generated by MySQL Workbench
-- Tue Jan 24 20:16:59 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema network
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `network` ;

-- -----------------------------------------------------
-- Schema network
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `network` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `network` ;

-- -----------------------------------------------------
-- Table `typeCustomer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `typeCustomer` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `typeCustomer` (
  `tc_id` INT NOT NULL AUTO_INCREMENT,
  `tc_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`tc_id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `Customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Customer` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Customer` (
  `c_id` INT NOT NULL AUTO_INCREMENT,
  `c_name` VARCHAR(45) NOT NULL,
  `c_type` INT NOT NULL,
  PRIMARY KEY (`c_id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `status` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `status` (
  `st_id` INT NOT NULL AUTO_INCREMENT,
  `st_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`st_id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ais_ip`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ais_ip` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ais_ip` (
  `ai_id` INT NOT NULL AUTO_INCREMENT,
  `ai_name` VARCHAR(45) NOT NULL,
  `ai_ip` VARCHAR(45) NOT NULL,
  `ai_date` VARCHAR(45) NOT NULL,
  `ai_st` INT NULL,
  PRIMARY KEY (`ai_id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `dtac_ip`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dtac_ip` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `dtac_ip` (
  `dt_id` INT NOT NULL AUTO_INCREMENT,
  `dt_name` VARCHAR(45) NOT NULL,
  `dt_ip` VARCHAR(45) NOT NULL,
  `dt_date` VARCHAR(45) NOT NULL,
  `dt_st` INT NOT NULL,
  PRIMARY KEY (`dt_id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `useCutomer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `useCutomer` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `useCutomer` (
  `uc_id` INT NOT NULL AUTO_INCREMENT,
  `uc_ai` INT NOT NULL,
  `uc_dt` INT NOT NULL,
  `uc_cu` INT NOT NULL,
  PRIMARY KEY (`uc_id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `IpAdress`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `IpAdress` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `IpAdress` (
  `Ia_id` INT NOT NULL AUTO_INCREMENT,
  `Ia_ais` VARCHAR(45) NOT NULL,
  `Ia_dtac` VARCHAR(45) NOT NULL,
  `Ia_cid` VARCHAR(45) NOT NULL,
  `Ia_ph_ais` VARCHAR(45) NULL,
  `Ia_ph_dtac` VARCHAR(45) NULL,
  `Ia_st` INT NOT NULL,
  `Ia_uc` INT NOT NULL,
  PRIMARY KEY (`Ia_id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Data for table `typeCustomer`
-- -----------------------------------------------------
START TRANSACTION;
USE `network`;
INSERT INTO `typeCustomer` (`tc_id`, `tc_name`) VALUES (1, 'Bank');
INSERT INTO `typeCustomer` (`tc_id`, `tc_name`) VALUES (2, 'None Bank');

COMMIT;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
